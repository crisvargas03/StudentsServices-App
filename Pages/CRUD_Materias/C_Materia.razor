@page "/CRUD_Materias/C_Materia"
@using Sistema_Estudiantil.Models

<MudCard Style="margin:25px;">
    <MudCardContent>
        <MudIconButton Link="/CRUD_Materias/Materias" Icon="@Icons.Material.Filled.ArrowBack" Color="Color.Primary" />

        <h2 class="text-center"><strong>Agregar Materia</strong></h2>
        <MudCard Style="background-color:lightgrey;" Class="mt-3">
            <MudCardContent>
                <MudExpansionPanel IsExpanded="true" Text="Formulario">
                    <MudForm @ref="form" @bind-IsValid="success" @bind-Errors="errors">
                        <MudGrid Class="mt-3">
                            <MudItem xs="12" sm="6" md="6">
                                <label>Ingrese el nombre de la materia:</label>
                                <MudTextField Variant="Variant.Outlined" T="string" @bind-Value="materia.Nombre" Required="true" RequiredError="El campo de materia es requerido..." />
                            </MudItem>
                            <MudItem xs="12" sm="6" md="6">
                                <label>Seleccione los Creditos de la Materia:</label>
                                <MudSelect Label="Creditos de la materia" @bind-Value="materia.Creditos" Variant="Variant.Outlined" HelperText="Creditos de la materia"
                                           OffsetY="true" OpenIcon="@Icons.Material.Filled.Note" T="long" AdornmentColor="Color.Info"
                                           Required="true" RequiredError="El campo de creditos es requerido...">
                                    @foreach (var item in selectCredits)
                                    {
                                        <MudSelectItem Value="item" >@item</MudSelectItem>
                                    }
                                </MudSelect>
                            </MudItem>
                            <MudItem xs="12" Style="display:flex; justify-content:center;">
                                <MudButton Variant="Variant.Filled" Color="Color.Success" Disabled="@(!success)" @onclick="CreateMateria" EndIcon="@Icons.Filled.Save">Agregar</MudButton>
                            </MudItem>
                        </MudGrid>
                    </MudForm>
                </MudExpansionPanel>
            </MudCardContent>
        </MudCard>

        @if (showCallAlert)
        {
            <MudAlert Class="mt-5" Severity="Severity.Success" AlertTextPosition="AlertTextPosition.Center" ShowCloseIcon="true" CloseIconClicked="(() => CloseMe(false))">Materia añadida de forma correcta</MudAlert>
        }

        <MudExpansionPanel Style="background-color:lightblue;" Text="Errores del formulario" Class="mt-5">
            @if (errors.Length == 0)
            {
                <MudAlert Style="background-color:white;" Severity="Severity.Info" AlertTextPosition="AlertTextPosition.Center">No hay ningun error en el formulario...</MudAlert>
            }
            @if (!success)
            {
                @foreach (var error in errors)
                {
                    <MudAlert Style="background-color:red; color:white;" Severity="Severity.Error" AlertTextPosition="AlertTextPosition.Center">@error</MudAlert>
                }
            }
        </MudExpansionPanel>
    </MudCardContent>
</MudCard>



@code{
        bool success;
        string[] errors = { };
        MudTextField<string> pwField1;
        MudForm form;

        List<long> selectCredits = new List<long>() {0,1,2,3,4,5 };

        Materia materia = new Materia();

        void CreateMateria()
        {
            //---------------obtener el ultimo registro--------------------------
            List<Materia> getUltimoId() => new ProgramaEstudiantilDBContext().Materia.OrderByDescending(x => x.MateriaId).Take(1).ToList();

            foreach (var i in getUltimoId())
            {
                materia.MateriaId = Convert.ToInt32(i.MateriaId + 1);
            }
            //----------------------Fin----------------------------

            using (ProgramaEstudiantilDBContext cmd_Insert = new ProgramaEstudiantilDBContext())
            {
                cmd_Insert.Add(materia);
                cmd_Insert.SaveChanges();
                ShowAlert();
            }

        }

    //Close the alerts variables
    private bool showCallAlert = false;
    private bool showLeaveAlert = false;
    private bool errorAlert = false;

    //Method for closing the alert
    private void CloseMe(bool value)
    {
        if (value)
        {
            showLeaveAlert = false;
        }
        else
        {
            showCallAlert = false;
        }
    }

    //ShowAlert
    private void ShowAlert()
    {
        showCallAlert = true;
        showLeaveAlert = true;
    }
}